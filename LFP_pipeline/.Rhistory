times_table
head(times_table)
str_match(colnames(times_table), ".*(?=_((start)|(end))$)")
str_match(colnames(times_table), ".*(?=_((start)|(end))$)")
str_extract(colnames(times_table), ".*(?=_((start)|(end))$)")
colnames(times_table)
str_extract(colnames(times_table), ".*(?=_((start)|(end))$)")
?str_extract
exp_phases_found
?str_match
str_match(colnames(times_table), "?<start>.*(?=_start$)")
str_match(colnames(times_table), "?<start>.*(?=_start$)")
?str_match
str_match(colnames(times_table), "(?<start>.*(?=_start$))")
str_match(colnames(times_table), c("(?<start>.*(?=_start$))", "(?<end>.*(?=_end$))") )
exp_phases_w_start = str_extract(colnames(times_table), ".*(?=_start$)");
exp_phases_w_start
cbind(exp_phases_w_start, colnames(times_table) )
exp_phases_w_end
exp_phases_w_start
exp_phases_w_start
exp_phases_w_end
exp_phases_w_end
exp_phases
expected_non_time_labels
intersect(expected_non_time_labels, colnames(times_table) )
is.element(expected_non_time_labels, colnames(times_table) )
exp_phases
paste0(exp_phases, c("_start", "_end") )
phase_ix = exp_phases[1]
phase_ix
paste0(phase_ix, c("_start", "_end") )
sapply(exp_phases, \(phase_ix) paste0(phase_ix, c("_start", "_end") ))
class(sapply(exp_phases, \(phase_ix) paste0(phase_ix, c("_start", "_end") )))
as.vector(sapply(exp_phases, \(phase_ix) paste0(phase_ix, c("_start", "_end") )))
time_labels
remaining_non_time_labels
non_time_labels
times_table_new
head(times_table_new)
q()
n
times_table
exp_phases
vector(mode="list", length=4)
blah = vector(mode="list", length=4);
blah[[1]] = data.frame(1:4)
blah
n_rec
times_table
head(times_table)
q()
n
non_time_labels
rx= 1;
time_regions_df
rec_rx
rec_rx
n_exp_phases
px = 1;
phase_px
ax
bx
character(4)
time_regions_df
numeric(4)
time_regions_df
time_regions_df$start
rx = 1;
time_regions_df
px = 1;
phase_px
time_regions_df
time_regions_df
time_regions_df
time_regions_df
times_table
head(times_table)
rx = 1;
head(times_table)
px = 1;
phase_px
times_table
head(times_table)
times_table
head(times_table)
times_table
library(tidyr)
unnest(times_table, cols=c("time_regions") )
time_regions
time_regions[[1]]
time_regions[[1]][["start"]]
time_regions[[1]][["end"]]
time_regions[[1]][["exp_phase"]]
time_regions
times_table
head(times_table)
times_table$time_regions = time_regions;
times_table
times_table
head(times_table)
times_table$time_regions
blah
head(blah)
unnest(blah, cols=c(time_regions) )
56 * 5
blah
q()
n
q()
n
times_table
times_table
head(times_table)
library(dplyr)
times_table %>% select(ID, date, Treatment)
blah = times_table %>% select(ID, date, Treatment) %>% group_by(ID) %>% nest();
blah
blah$data[[1]]
blah$data[[2]]
blah$data[[3]]
blah$data[[4]]
q()
n
times_table
times_table
ixs_cgrp
unique(times_table$Treatment)
q()
n
times_table
times_table
times_table
print(times_table, n=280)
save_filename
library(dplyr)
times_table %>% select(ID, date, Treatment, CGRP)
times_table %>% select(ID, date, Treatment, CGRP) %>% group_by(ID)
blah = times_table %>% select(ID, date, Treatment, CGRP) %>% group_by(ID) %>% nest();
blah$data[[1]]
blah = times_table %>% select(ID, date, Treatment, exp_phase, CGRP) %>% group_by(ID) %>% nest();
blah
blah$data[[1]]
blah$data[[2]]
blah$data[[3]]
blah$data[[4]]
blah$data[[5]]
blah$data[[6]]
blah$data[[7]]
blah$data[[8]]
blah$data[[9]]
blah$data[[10]]
blah$data[[11]]
blah$data[[12]]
blah$data[[13]]
blah$data[[14]]
blah$data[[15]]
blah$data[[16]]
blah$data[[17]]
blah$data[[18]]
blah$data[[19]]
?write.csv
blah = read.csv(save_filename)
blah = read.csv(save_filename, header=TRUE);
blah
head(blah)
blah == times_table
all(blah == times_table)
q()
n
times_table_fname
times_table
head(times_table)
head(times_table)
q()
n
q()
n
times_table
head(times_table)
exp_phases
time_labels
non_time_labels
times_table
q()
n
rx = 1;
times_table$time_regions[[1]]
times_table$time_regions[[1]]
q()
n
times_table
times_table
times_table
blah = read.csv(save_filename, header=TRUE)
blah == times_table
all(blah == times_table)
library(dplyr)
tibble(times_table)
blah = times_table %>% select(ID, date, Treatment, exp_phase, CGRP) %>% group_by(ID) %>% nest();
blah
blah$data[[1]]
for (ix in 1:19) {
  print(blah$data[[ix]]);
}
q()
n
times_table[1:5,1:5]
times_table[1:5,1:10]

times_table[1:5,1:10]

exp_phases
time_labels
non_time_labels
rx = 1;
times_table
n_exp_phases
times_table
times_table
q()
n
times_table
q()
n
library(stringr)
library(tidyr)


times_table_fname = paste0(
  "/home",
  "/ikhultman",
  "/Desktop",
  "/light_dark_cvsfa",
  "/light_dark_CVSFA",
  "/lpne_analysis",
  "/yassine_experiments",
  "/MigraineV2xFLA_C2_C3_times_tables_CGRP_A1_A2_B_250324.csv");

save_filename = paste0(
  "/home",
  "/ikhultman",
  "/Desktop",
  "/light_dark_cvsfa",
  "/light_dark_CVSFA",
  "/lpne_analysis",
  "/yassine_experiments",
  "/MigraineV2xFLA_CGRP_times_and_labels.csv");

times_table = read.csv(times_table_fname, header=TRUE);
times_table
head(times_table)
q()
n
exp_phases
times_table
57 * 5
56 * 5
times_table
q()
n
blah = read.csv(times_table, header=TRUE);
blah = read.csv(save_filename, header=TRUE);
blah
head(blah)
blah == times_table
all(blah == times_table)
q()
n
times_table[1:5,]
names(times_table[1:5,])
exp_phases
times_table
rx = 1;
times_table$time_regions[[rx]]
times_table$time_regions[[rx]]
times_table[rx,]
rx = 2
times_table$time_regions[[rx]]
times_table[rx,]
times_table$time_regions[[1]]
times_table$time_regions[[2]]
times_table
times_table
q()
n
blah = read.csv(save_filename, header=TRUE)
blah
blah == times_table
all(blah == times_table)
save_filename
q()
n
setwd("../MigraineV2xFLA/")
n
cvsfa_results$Gam1_chol
plot(unlist(cvsfa_results$likelihoods), type = "l")
Lam1 = cvsfa_results$Lam1 %*% cvsfa_results$Gam1_chol;
Lam2 = cvsfa_results$Lam2 %*% cvsfa_results$Gam2_chol;
Lam3 = cvsfa_results$Lam3 %*% cvsfa_results$Gam3_chol;
Lam1
Lam2
Lam3
proj1
dim(aperm(X_fft, c(2, 3, 4, 1) ))
dim(X1_mat)
dim(aperm(X1_mat, c(2, 3, 4, 1) ))
X2_mat = array(proj2 %*% matrix(aperm(X1_mat, c(2, 3, 4, 1) ), n_regions), dim=c(2, n_time, n_mice_dates, 2) );
dim(X2_mat)
dim(X3_mat)
dim(X_final)
cvsfa_results$mice_dates
ixs_cgrp = cvsfa_results$mice_dates$CGRP == "CGRP"
ixs
ixs_cgrp
X_cgrp = X_final[ixs_cgrp,,,];
dim(X_cgrp)
ixs_veh = cvsfa_results$mice_dates$CGRP == "veh"
X_veh = X_final[ixs_veh,,,];
dim(X_veh)
X_cgrp[,1,1,1]
plot(Mod(X_cgrp[,1,1,1]) )
hist(Mod(X_cgrp[,1,1,1]) )
hist(Mod(X_cgrp[,1,1,1]), density = TRUE)
hist(Mod(X_veh[,1,1,1]), density = TRUE)
plot(Mod(X_veh[,1,1,1]) )
Mod(X_veh[,1,1,1]) == max(Mod(X_veh[,1,1,1]) )
which(Mod(X_veh[,1,1,1]) == max(Mod(X_veh[,1,1,1]) ))
cvsfa_results["Psi1"]
dim(cvsfa_results["Psi1"])
cvsfa_results["Psi1"]
class(cvsfa_results["Psi1"])
unlist(cvsfa_results["Psi1"])
class(cvsfa_results["Psi1"])
matrix(cvsfa_results["Psi1"])
cvsfa_results["Psi1"][[1]]
dim(cvsfa_results["Psi1"][[1]])
psi1_chol
psi1_chol %*% psi1_chol == cvsfa_results["Psi1"][[1]]
psi1_chol %*% psi1_chol - cvsfa_results["Psi1"][[1]]
svd(Lam1)
Sig1
Sig1_sqrt_inv
Sig1_sqrt_inv %*% Sig1_sqrt_inv %*% Sig1
all.equal(Sig1_sqrt_inv %*% Sig1_sqrt_inv %*% Sig1, diag(51) )
all.equal(Sig1_sqrt_inv %*% Sig1_sqrt_inv %*% Sig1), diag(1+0i, 51) )
all.equal(Sig1_sqrt_inv %*% Sig1_sqrt_inv %*% Sig1, diag(1+0i, 51) )
dim(X_final)
dim(X_final)
?matplot
t(apply(Mod(X_final[ixs_cgrp,1,,]), 2:3, mean ))
t(apply(Mod(X_final[ixs_cgrp,1,,]), 2:3, mean ))
dim(t(apply(Mod(X_final[ixs_cgrp,1,,]), 2:3, mean )))
matplot((t(apply(Mod(X_final[ixs_cgrp,1,,]), 2:3, mean )), type='l');
matplot(t(apply(Mod(X_final[ixs_cgrp,1,,]), 2:3, mean )), type='l')
matplot(t(apply(Mod(X_final[ixs_cgrp,1,1,]), 2:3, mean )), type='l')
matplot(t(apply(Mod(X_final[ixs_cgrp, 1, ,]), 2:3, mean )[1:4, ]), type='l')
matplot(t(apply(Mod(X_final[ixs_veh, 1, ,]), 2:3, mean )[1:4, ]), type='l')
par(mfrow=c(2, 1) )
matplot(t(apply(Mod(X_final[ixs_veh, 1, ,]), 2:3, mean )[1:4, ]), type='l')
matplot(t(apply(Mod(X_final[ixs_cgrp, 1, ,]), 2:3, mean )[1:4, ]), type='l')
par(mfrow=c(2, 1) )
matplot(t(apply(Mod(X_final[ixs_veh, 1, ,]), 2:3, mean )[5:8, ]), type='l')
matplot(t(apply(Mod(X_final[ixs_cgrp, 1, ,]), 2:3, mean )[5:8]), type='l')
par(mfrow=c(2, 1) )
matplot(t(apply(Mod(X_final[ixs_veh, 1, ,]), 2:3, mean )[5:8, ]), type='l')
matplot(t(apply(Mod(X_final[ixs_cgrp, 1, ,]), 2:3, mean )[5:8,]), type='l')
par(mfrow=c(2, 1) )
matplot(t(apply(Mod(X_final[ixs_veh, 1, ,]), 2:3, mean )[9:12, ]), type='l')
matplot(t(apply(Mod(X_final[ixs_cgrp, 1, ,]), 2:3, mean )[9:12,]), type='l')
plot(Mod(Lam3[:,1]) )
plot(Mod(Lam3[,1]) )
plot(Mod(Lam3[,1]), type='l')
plot(Mod(Lam3[,2]), type='l')
Lam1
kronecker(Lam2 %*% Conj(t(Lam2) ), Lam1 %*% Conj(t(Lam1) ))
S2_kron_S1 = kronecker(Lam2 %*% Conj(t(Lam2) ), Lam1 %*% Conj(t(Lam1) ));
tcrossprod(S2_kron_S11 / sqrt(diag(S2_kron_S1) )
blah = 1 / sqrt(diag(S2_kron_S1) );
dim(blah)
blah
tmp = S2_kron_S1 * outer(blah, blah)
diag(tmp)
Matrix::image(Matirx::Matrix(Mod(tmp)))
Matrix::image(Matirx::Matrix(Mod(tmp)))
(Matirx::Matrix(Mod(tmp)))
Matrix::image(Matrix::Matrix(Mod(tmp)))
S2 = (Lam2 %*% Conj(t(Lam2) ))
Matrix::image(Matrix::Matrix(Mod(S2 / outer(1/ sqrt(diag(S2))))))
(Mod(S2 / outer(1/ sqrt(diag(S2)))))
outer(1/ sqrt(diag(S2)))
outer(1/ sqrt(diag(S2)), 1/ sqrt(diag(S2)))
Matrix::image(Matrix::Matrix(Mod(S2 * outer(1/ sqrt(diag(S2)), 1/ sqrt(diag(S2))))))
Lam2
Mod(Lam2)
plot(Mod(Lam2)[,1])
points(Mod(Lam2)[,2], col="blue")
plot(Mod(Lam1)[,1], type = "l")
lines(Mod(Lam2)[,1], col = "blue")
lines(Mod(Lam1)[,2], col = "blue")
plot(Mod(Lam2)[,1], type = "l")
lines(Mod(Lam2)[,2], col = "blue")
q()
n
